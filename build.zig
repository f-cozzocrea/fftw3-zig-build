const std = @import("std");

pub fn build(b: *std.Build) void {
    const target = b.standardTargetOptions(.{});
    const optimize = b.standardOptimizeOption(.{});

    const fftw3_lib = b.dependency("fftw3", .{});
    const fftw3_config_h_template = fftw3_lib.path("config.h.in");
    _ = fftw3_config_h_template;

    const lib = b.addDynamicLibrary(.{
        .name = "fftw3-zig-build",
        .root_source_file = .{ .path = "src/root.zig" },
        .target = target,
        .optimize = optimize,
    });

    b.installArtifact(lib);

    const lib_unit_tests = b.addTest(.{
        .root_source_file = .{ .path = "src/root.zig" },
        .target = target,
        .optimize = optimize,
    });

    const run_lib_unit_tests = b.addRunArtifact(lib_unit_tests);

    const test_step = b.step("test", "Run unit tests");
    test_step.dependOn(&run_lib_unit_tests.step);
}

// TODO: Update these to be more portable
const Value = std.Build.Step.ConfigHeader.Value;
const FFTW3ConfigOptions = struct {
    ARCH_PREFERS_FMA: Value = .undef,
    BENCHFFT_LDOUBLE: Value = .undef,
    BENCHFFT_QUAD: Value = .undef,
    BENCHFFT_SINGLE: Value = .undef,
    CRAY_STACKSEG_END: Value = .undef,
    C_ALLOCA: Value = .undef,
    DISABLE_FORTRAN: Value = .undef,
    F77_DUMMY_MAIN: Value = .undef,
    F77_FUNC: Value,
    F77_FUNC_: Value,
    F77_FUNC_EQUIV: Value,
    FC_DUMMY_MAIN_EQ_F77: Value,
    FFTW_CC: Value,
    FFTW_DEBUG: Value,
    FFTW_ENABLE_ALLOCA: Value,
    FFTW_LDOUBLE: Value,
    FFTW_QUAD: Value,
    FFTW_RANDOM_ESTIMATOR: Value,
    FFTW_SINGLE: Value,
    HAVE_ABORT: Value,
    HAVE_ALLOCA: Value,
    HAVE_ALLOCA_H: Value,
    HAVE_ALTIVEC: Value,
    HAVE_ALTIVEC_H: Value,
    HAVE_ARMV7A_CNTVCT: Value,
    HAVE_ARMV7A_PMCCNTR: Value,
    HAVE_ARMV8_CNTVCT_EL0: Value,
    HAVE_ARMV8_PMCCNTR_EL0: Value,
    HAVE_AVX: Value,
    HAVE_AVX2: Value,
    HAVE_AVX512: Value,
    HAVE_AVX_128_FMA: Value,
    HAVE_BSDGETTIMEOFDAY: Value,
    HAVE_CLOCK_GETTIME: Value,
    HAVE_COSL: Value,
    HAVE_DECL_COSL: Value,
    HAVE_DECL_COSQ: Value,
    HAVE_DECL_DRAND48: Value,
    HAVE_DECL_MEMALIGN: Value,
    HAVE_DECL_POSIX_MEMALIGN: Value,
    HAVE_DECL_SINL: Value,
    HAVE_DECL_SINQ: Value,
    HAVE_DECL_SRAND48: Value,
    HAVE_DLFCN_H: Value,
    HAVE_DOPRNT: Value,
    HAVE_DRAND48: Value,
    HAVE_FCNTL_H: Value,
    HAVE_FENV_H: Value,
    HAVE_GENERIC_SIMD128: Value,
    HAVE_GENERIC_SIMD256: Value,
    HAVE_GETHRTIME: Value,
    HAVE_GETPAGESIZE: Value,
    HAVE_GETTIMEOFDAY: Value,
    HAVE_HRTIME_T: Value,
    HAVE_INTTYPES_H: Value,
    HAVE_ISNAN: Value,
    HAVE_KCVI: Value,
    HAVE_LIBM: Value,
    HAVE_LIBQUADMATH: Value,
    HAVE_LIMITS_H: Value,
    HAVE_LONG_DOUBLE: Value,
    HAVE_MACH_ABSOLUTE_TIME: Value,
    HAVE_MALLOC_H: Value,
    HAVE_MEMALIGN: Value,
    HAVE_MEMMOVE: Value,
    HAVE_MEMORY_H: Value,
    HAVE_MEMSET: Value,
    HAVE_MIPS_ZBUS_TIMER: Value,
    HAVE_MPI: Value,
    HAVE_NEON: Value,
    HAVE_OPENMP: Value,
    HAVE_POSIX_MEMALIGN: Value,
    HAVE_PTHREAD: Value,
    HAVE_PTRDIFF_T: Value,
    HAVE_READ_REAL_TIME: Value,
    HAVE_SINL: Value,
    HAVE_SNPRINTF: Value,
    HAVE_SQRT: Value,
    HAVE_SSE2: Value,
    HAVE_STDDEF_H: Value,
    HAVE_STDINT_H: Value,
    HAVE_STDLIB_H: Value,
    HAVE_STRCHR: Value,
    HAVE_STRINGS_H: Value,
    HAVE_STRING_H: Value,
    HAVE_SYSCTL: Value,
    HAVE_SYS_STAT_H: Value,
    HAVE_SYS_TIME_H: Value,
    HAVE_SYS_TYPES_H: Value,
    HAVE_TANL: Value,
    HAVE_THREADS: Value,
    HAVE_TIME_BASE_TO_TIME: Value,
    HAVE_UINTPTR_T: Value,
    HAVE_UNISTD_H: Value,
    HAVE_VPRINTF: Value,
    HAVE_VSX: Value,
    HAVE__MM_FREE: Value,
    HAVE__MM_MALLOC: Value,
    HAVE__RTC: Value,
    LT_OBJDIR: Value,
    PACKAGE: Value,
    PACKAGE_BUGREPORT: Value,
    PACKAGE_NAME: Value,
    PACKAGE_STRING: Value,
    PACKAGE_TARNAME: Value,
    PACKAGE_URL: Value,
    PACKAGE_VERSION: Value,
    PTHREAD_CREATE_JOINABLE: Value,
    SIZEOF_DOUBLE: Value,
    SIZEOF_FFTW_R2R_KIND: Value,
    SIZEOF_FLOAT: Value,
    SIZEOF_INT: Value,
    SIZEOF_LONG: Value,
    SIZEOF_LONG_LONG: Value,
    SIZEOF_MPI_FINT: Value,
    SIZEOF_PTRDIFF_T: Value,
    SIZEOF_SIZE_T: Value,
    SIZEOF_UNSIGNED_INT: Value,
    SIZEOF_UNSIGNED_LONG: Value,
    SIZEOF_UNSIGNED_LONG_LONG: Value,
    SIZEOF_VOID_P: Value,
    STACK_DIRECTION: Value,
    STDC_HEADERS: Value,
    TIME_WITH_SYS_TIME: Value,
    USING_POSIX_THREADS: Value,
    VERSION: Value = .{ .string = "3.3.10" },
    WINDOWS_F77_MANGLING: Value,
    WITH_G77_WRAPPERS: Value,
    WITH_OUR_MALLOC: Value,
    WITH_SLOW_TIMER: Value,
    _UINT32_T: Value = .undef,
    _UINT64_T: Value = .undef,
    @"const": Value = .undef,
    @"inline": Value = .undef,
    size_t: Value = .undef,
    uint32_t: Value = .undef,
    uint64_t: Value = .undef,
};
